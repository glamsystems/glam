{
  "address": "GLAMbTqav9N9witRjswJ8enwp9vv5G8bsSJ2kPJ4rcyc",
  "metadata": {
    "name": "glam",
    "version": "0.4.6",
    "spec": "0.1.0",
    "description": "Glam Protocol"
  },
  "instructions": [
    {
      "name": "add_mint",
      "docs": [
        "Adds a new mint.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `mint_model`: An instance of `MintModel` containing the metadata for the new mint.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        171,
        222,
        111,
        37,
        60,
        166,
        208,
        108
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "new_mint",
          "writable": true
        },
        {
          "name": "extra_account_meta_list",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  120,
                  116,
                  114,
                  97,
                  45,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116,
                  45,
                  109,
                  101,
                  116,
                  97,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "new_mint"
              }
            ]
          }
        },
        {
          "name": "openfunds_metadata",
          "writable": true,
          "optional": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  101,
                  116,
                  97,
                  100,
                  97,
                  116,
                  97
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": [
        {
          "name": "mint_model",
          "type": {
            "defined": {
              "name": "MintModel"
            }
          }
        }
      ]
    },
    {
      "name": "burn_tokens",
      "docs": [
        "Burns a specified amount of tokens for the given mint.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `mint_id`: The id of the mint to burn tokens for.",
        "- `amount`: The amount of tokens to burn.",
        "",
        "# Permission required",
        "- Permission::BurnTokens",
        "",
        "# Integration required",
        "- Integration::Mint"
      ],
      "discriminator": [
        76,
        15,
        51,
        254,
        229,
        215,
        121,
        66
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "glam_mint",
          "writable": true
        },
        {
          "name": "from_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "from"
              },
              {
                "kind": "account",
                "path": "token_2022_program"
              },
              {
                "kind": "account",
                "path": "glam_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "from"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": [
        {
          "name": "mint_id",
          "type": "u8"
        },
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "close_mint",
      "docs": [
        "Closes a mint and releases its resources.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `mint_id`: The id of the mint to be closed.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        149,
        251,
        157,
        212,
        65,
        181,
        235,
        129
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "glam_mint",
          "writable": true
        },
        {
          "name": "extra_account_meta_list",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  120,
                  116,
                  114,
                  97,
                  45,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116,
                  45,
                  109,
                  101,
                  116,
                  97,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "glam_mint"
              }
            ]
          }
        },
        {
          "name": "metadata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  101,
                  116,
                  97,
                  100,
                  97,
                  116,
                  97
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": [
        {
          "name": "mint_id",
          "type": "u8"
        }
      ]
    },
    {
      "name": "close_state",
      "docs": [
        "Closes a state account and releases its resources.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        25,
        1,
        184,
        101,
        200,
        245,
        210,
        246
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "metadata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  101,
                  116,
                  97,
                  100,
                  97,
                  116,
                  97
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "close_token_accounts",
      "docs": [
        "Closes token accounts owned by the vault.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        199,
        170,
        37,
        55,
        63,
        183,
        235,
        143
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": []
    },
    {
      "name": "deactivate_stake_accounts",
      "docs": [
        "Deactivates stake accounts.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::Unstake",
        "",
        "# Integration required",
        "- Integration::NativeStaking"
      ],
      "discriminator": [
        58,
        18,
        6,
        22,
        226,
        216,
        161,
        193
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "clock",
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "stake_program",
          "address": "Stake11111111111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "drift_balance_value_usd",
      "docs": [
        "Gets the balance value of a user's positions in USD.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        152,
        248,
        238,
        80,
        92,
        122,
        40,
        131
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "state"
        },
        {
          "name": "user"
        },
        {
          "name": "user_stats"
        }
      ],
      "args": []
    },
    {
      "name": "drift_cancel_orders",
      "docs": [
        "Cancels drift orders.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `market_type`: The type of market (spot or perp) to cancel orders for.",
        "- `market_index`: The index of the market to cancel orders for.",
        "- `direction`: The direction of orders to cancel (long or short).",
        "",
        "# Permission required",
        "- Permission::DriftCancelOrders",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        98,
        107,
        48,
        79,
        97,
        60,
        99,
        58
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "state"
        },
        {
          "name": "user",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "market_type",
          "type": {
            "option": {
              "defined": {
                "name": "MarketType"
              }
            }
          }
        },
        {
          "name": "market_index",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "direction",
          "type": {
            "option": {
              "defined": {
                "name": "PositionDirection"
              }
            }
          }
        }
      ]
    },
    {
      "name": "drift_cancel_orders_by_ids",
      "docs": [
        "Cancels drift orders by order IDs.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `order_ids`: A list of order IDs.",
        "",
        "# Permission required",
        "- Permission::DriftCancelOrders",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        172,
        99,
        108,
        14,
        81,
        89,
        228,
        183
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "state"
        },
        {
          "name": "user",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "order_ids",
          "type": {
            "vec": "u32"
          }
        }
      ]
    },
    {
      "name": "drift_delete_user",
      "docs": [
        "Deletes a drift user (sub account).",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::DriftDeleteUser",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        179,
        118,
        20,
        212,
        145,
        146,
        49,
        130
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "user",
          "writable": true
        },
        {
          "name": "user_stats",
          "writable": true
        },
        {
          "name": "state",
          "writable": true
        }
      ],
      "args": []
    },
    {
      "name": "drift_deposit",
      "docs": [
        "Deposits to drift.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `market_index`: Index of the drift spot market.",
        "- `amount`: Amount of asset to deposit.",
        "",
        "# Permission required",
        "- Permission::DriftDeposit",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        252,
        63,
        250,
        201,
        98,
        55,
        130,
        12
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "state"
        },
        {
          "name": "user",
          "writable": true
        },
        {
          "name": "user_stats",
          "writable": true
        },
        {
          "name": "spot_market_vault",
          "writable": true
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "market_index",
          "type": "u16"
        },
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "reduce_only",
          "type": "bool"
        }
      ]
    },
    {
      "name": "drift_initialize_user",
      "discriminator": [
        107,
        244,
        158,
        15,
        225,
        239,
        98,
        245
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "user",
          "writable": true
        },
        {
          "name": "user_stats",
          "writable": true
        },
        {
          "name": "state",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "sub_account_id",
          "type": "u16"
        },
        {
          "name": "name",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "drift_initialize_user_stats",
      "docs": [
        "Initializes a drift account owned by vault and creates a subaccount.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::DriftInitialize",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        133,
        185,
        103,
        162,
        90,
        161,
        78,
        143
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "user_stats",
          "writable": true
        },
        {
          "name": "state",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "drift_modify_order",
      "docs": [
        "Modifies an existing drift order.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `order_id`: The ID of the order to modify.",
        "- `modify_order_params`: The parameters to modify the order with.",
        "",
        "# Permission required",
        "- Permission::DriftModifyOrder",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        235,
        245,
        222,
        58,
        245,
        128,
        19,
        202
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "state"
        },
        {
          "name": "user",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "order_id",
          "type": {
            "option": "u32"
          }
        },
        {
          "name": "modify_order_params",
          "type": {
            "defined": {
              "name": "ModifyOrderParams"
            }
          }
        }
      ]
    },
    {
      "name": "drift_place_orders",
      "docs": [
        "Places orders on drift.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `params`: A list of orders.",
        "",
        "# Permissions required",
        "- Permission::DriftPlaceOrders",
        "- Additional permission Permission::DriftSpotMarket or Permission::DriftPerpMarket is required depending on market type.",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        117,
        18,
        210,
        6,
        238,
        174,
        135,
        167
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "state"
        },
        {
          "name": "user",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "vec": {
              "defined": {
                "name": "OrderParams"
              }
            }
          }
        }
      ]
    },
    {
      "name": "drift_update_user_custom_margin_ratio",
      "docs": [
        "Updates custom margin ratio.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `sub_account_id`: Sub account.",
        "- `margin_ratio`: Margin ratio.",
        "",
        "# Permission required",
        "- Permission::DriftUpdateUser",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        4,
        47,
        193,
        177,
        128,
        62,
        228,
        14
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "user",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "sub_account_id",
          "type": "u16"
        },
        {
          "name": "margin_ratio",
          "type": "u32"
        }
      ]
    },
    {
      "name": "drift_update_user_delegate",
      "docs": [
        "Sets a delegate on the specified sub account.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `sub_account_id`: Sub account.",
        "- `delegate`: Delegate's wallet address.",
        "",
        "# Permission required",
        "- Permission::DriftUpdateUser",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        36,
        181,
        34,
        31,
        22,
        77,
        36,
        154
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "user",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "sub_account_id",
          "type": "u16"
        },
        {
          "name": "delegate",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "drift_update_user_margin_trading_enabled",
      "docs": [
        "Enables/Disables margin trading.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `sub_account_id`: Sub account.",
        "- `margin_trading_enabled`: Whether to enable or disable margin trading.",
        "",
        "# Permission required",
        "- Permission::DriftUpdateUser",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        157,
        175,
        12,
        19,
        202,
        114,
        17,
        36
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "user",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "sub_account_id",
          "type": "u16"
        },
        {
          "name": "margin_trading_enabled",
          "type": "bool"
        }
      ]
    },
    {
      "name": "drift_withdraw",
      "docs": [
        "Withdraws from drift.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `market_index`: Index of the drift spot market.",
        "- `amount`: Amount to withdraw.",
        "",
        "# Permission required",
        "- Permission::DriftWithdraw",
        "",
        "# Integration required",
        "- Integration::Drift"
      ],
      "discriminator": [
        86,
        59,
        186,
        123,
        183,
        181,
        234,
        137
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH"
        },
        {
          "name": "state"
        },
        {
          "name": "user",
          "writable": true
        },
        {
          "name": "user_stats",
          "writable": true
        },
        {
          "name": "spot_market_vault",
          "writable": true
        },
        {
          "name": "drift_signer"
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "market_index",
          "type": "u16"
        },
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "reduce_only",
          "type": "bool"
        }
      ]
    },
    {
      "name": "force_transfer_tokens",
      "docs": [
        "Forcefully transfers a specified amount of tokens from one account to another.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `mint_id`: The id of the mint to transfer tokens for.",
        "- `amount`: The amount of tokens to transfer.",
        "",
        "# Permission required",
        "- Permission::ForceTransferTokens",
        "",
        "# Integration required",
        "- Integration::Mint"
      ],
      "discriminator": [
        185,
        34,
        78,
        211,
        192,
        13,
        160,
        37
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "glam_mint",
          "writable": true
        },
        {
          "name": "from_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "from"
              },
              {
                "kind": "account",
                "path": "token_2022_program"
              },
              {
                "kind": "account",
                "path": "glam_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "to_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "to"
              },
              {
                "kind": "account",
                "path": "token_2022_program"
              },
              {
                "kind": "account",
                "path": "glam_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "from"
        },
        {
          "name": "to"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": [
        {
          "name": "mint_id",
          "type": "u8"
        },
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_and_delegate_stake",
      "docs": [
        "Initializes a stake account and delegates it to a validator.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `lamports`: The amount of SOL to initialize the stake account with.",
        "",
        "# Permission required",
        "- Permission::Stake",
        "",
        "# Integration required",
        "- Integration::NativeStaking"
      ],
      "discriminator": [
        71,
        101,
        230,
        157,
        50,
        23,
        47,
        1
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "vault_stake_account",
          "writable": true
        },
        {
          "name": "vote"
        },
        {
          "name": "stake_config"
        },
        {
          "name": "clock",
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "stake_history",
          "address": "SysvarStakeHistory1111111111111111111111111"
        },
        {
          "name": "stake_program",
          "address": "Stake11111111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "lamports",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_state",
      "docs": [
        "Initializes a state account from the provided StateModel instance.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `state`: An instance of `StateModel` containing the details of the state to be initialized.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        190,
        171,
        224,
        219,
        217,
        72,
        199,
        176
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  116,
                  97,
                  116,
                  101
                ]
              },
              {
                "kind": "account",
                "path": "glam_signer"
              },
              {
                "kind": "arg",
                "path": "state_model.created"
              }
            ]
          }
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "openfunds_metadata",
          "writable": true,
          "optional": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  101,
                  116,
                  97,
                  100,
                  97,
                  116,
                  97
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "state",
          "type": {
            "defined": {
              "name": "StateModel"
            }
          }
        }
      ]
    },
    {
      "name": "jupiter_gov_new_vote",
      "docs": [
        "Creates a new vote.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::VoteOnProposal",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        235,
        179,
        170,
        64,
        64,
        57,
        17,
        69
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "GovaE4iu227srtG2s3tZzB4RmWBzw8sTwrCLZz7kN7rY"
        },
        {
          "name": "proposal"
        },
        {
          "name": "vote",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "voter",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "jupiter_set_max_swap_slippage",
      "docs": [
        "Sets the max swap slippage.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `slippage`: The maximum allowed slippage in basis points.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        110,
        79,
        13,
        71,
        208,
        111,
        56,
        66
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "slippage",
          "type": "u64"
        }
      ]
    },
    {
      "name": "jupiter_swap",
      "docs": [
        "Swaps assets using Jupiter.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `amount`: The amount of input asset to swap.",
        "- `data`: The serialized Jupiter route data containing swap instructions and parameters.",
        "",
        "# Permission required",
        "- Any of",
        "- Permission::JupiterSwapAny: no restrictions.",
        "- Permission::JupiterSwapAllowlisted: input and output are in the assets allowlist.",
        "- Permission::JupiterSwapLst: input and output assets are both LST.",
        "",
        "# Integration required",
        "- Integration::JupiterSwap"
      ],
      "discriminator": [
        116,
        207,
        0,
        196,
        252,
        120,
        243,
        18
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4"
        },
        {
          "name": "input_vault_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "glam_vault"
              },
              {
                "kind": "account",
                "path": "input_token_program"
              },
              {
                "kind": "account",
                "path": "input_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "output_vault_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "glam_vault"
              },
              {
                "kind": "account",
                "path": "output_token_program"
              },
              {
                "kind": "account",
                "path": "output_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "input_mint"
        },
        {
          "name": "output_mint"
        },
        {
          "name": "input_stake_pool",
          "optional": true
        },
        {
          "name": "output_stake_pool",
          "optional": true
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "input_token_program"
        },
        {
          "name": "output_token_program"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ]
    },
    {
      "name": "jupiter_vote_cast_vote",
      "docs": [
        "Casts a vote.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `side`: The side to vote for.",
        "",
        "# Permission required",
        "- Permission::VoteOnProposal",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        11,
        197,
        234,
        57,
        164,
        74,
        181,
        239
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "voTpe3tHQ7AjQHMapgSue2HJFAh2cGsdokqN3XqmVSj"
        },
        {
          "name": "locker"
        },
        {
          "name": "escrow"
        },
        {
          "name": "proposal",
          "writable": true
        },
        {
          "name": "vote",
          "writable": true
        },
        {
          "name": "governor"
        },
        {
          "name": "govern_program"
        }
      ],
      "args": [
        {
          "name": "side",
          "type": "u8"
        }
      ]
    },
    {
      "name": "jupiter_vote_cast_vote_checked",
      "docs": [
        "Casts a vote, only if expected_side is already recorded.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `side`: The side to vote for.",
        "- `expected_side`: The expected side to check in the Vote account.",
        "",
        "# Permission required",
        "- Permission::VoteOnProposal",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        247,
        3,
        146,
        233,
        35,
        189,
        192,
        187
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "voTpe3tHQ7AjQHMapgSue2HJFAh2cGsdokqN3XqmVSj"
        },
        {
          "name": "locker"
        },
        {
          "name": "escrow"
        },
        {
          "name": "proposal",
          "writable": true
        },
        {
          "name": "vote",
          "writable": true
        },
        {
          "name": "governor"
        },
        {
          "name": "govern_program"
        }
      ],
      "args": [
        {
          "name": "side",
          "type": "u8"
        },
        {
          "name": "expected_side",
          "type": "u8"
        }
      ]
    },
    {
      "name": "jupiter_vote_increase_locked_amount",
      "docs": [
        "Increases the locked amount (aka stakes JUP).",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `amount`: The amount of JUP to stake.",
        "",
        "# Permission required",
        "- Permission::StakeJup",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        225,
        38,
        201,
        123,
        148,
        23,
        47,
        128
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "voTpe3tHQ7AjQHMapgSue2HJFAh2cGsdokqN3XqmVSj"
        },
        {
          "name": "locker",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "escrow_tokens",
          "writable": true
        },
        {
          "name": "source_tokens",
          "writable": true
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "jupiter_vote_merge_partial_unstaking",
      "docs": [
        "Merges partial unstaking.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::UnstakeJup",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        93,
        226,
        122,
        120,
        130,
        35,
        189,
        208
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "voTpe3tHQ7AjQHMapgSue2HJFAh2cGsdokqN3XqmVSj"
        },
        {
          "name": "locker",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "partial_unstake",
          "writable": true
        }
      ],
      "args": []
    },
    {
      "name": "jupiter_vote_new_escrow",
      "docs": [
        "Initializes a locked voter escrow.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::StakeJup",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        255,
        87,
        157,
        219,
        61,
        178,
        144,
        159
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "voTpe3tHQ7AjQHMapgSue2HJFAh2cGsdokqN3XqmVSj"
        },
        {
          "name": "locker",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "jupiter_vote_open_partial_unstaking",
      "docs": [
        "Partially unstakes JUP.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `amount`: The amount of JUP to partially unstake.",
        "- `memo`: The memo for the partial unstaking.",
        "",
        "# Permission required",
        "- Permission::UnstakeJup",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        84,
        7,
        113,
        220,
        212,
        63,
        237,
        218
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "voTpe3tHQ7AjQHMapgSue2HJFAh2cGsdokqN3XqmVSj"
        },
        {
          "name": "locker",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "partial_unstake",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "memo",
          "type": "string"
        }
      ]
    },
    {
      "name": "jupiter_vote_toggle_max_lock",
      "docs": [
        "Toggles max lock.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `is_max_lock`: true to allow staking, false to initiate full unstaking.",
        "",
        "# Permission required",
        "- Permission::StakeJup (if is_max_lock == true)",
        "- Permission::UnstakeJup (if is_max_lock == false)",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        204,
        158,
        192,
        21,
        219,
        25,
        154,
        87
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "voTpe3tHQ7AjQHMapgSue2HJFAh2cGsdokqN3XqmVSj"
        },
        {
          "name": "locker"
        },
        {
          "name": "escrow",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "is_max_lock",
          "type": "bool"
        }
      ]
    },
    {
      "name": "jupiter_vote_withdraw",
      "docs": [
        "Withdraws all unstaked JUP.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::UnstakeJup",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        195,
        172,
        184,
        195,
        23,
        178,
        145,
        191
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "voTpe3tHQ7AjQHMapgSue2HJFAh2cGsdokqN3XqmVSj"
        },
        {
          "name": "locker",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "escrow_tokens",
          "writable": true
        },
        {
          "name": "destination_tokens",
          "writable": true
        },
        {
          "name": "token_program"
        }
      ],
      "args": []
    },
    {
      "name": "jupiter_vote_withdraw_partial_unstaking",
      "docs": [
        "Withdraws JUP from partial unstaking.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::UnstakeJup",
        "",
        "# Integration required",
        "- Integration::JupiterVote"
      ],
      "discriminator": [
        109,
        98,
        65,
        252,
        184,
        0,
        216,
        240
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "voTpe3tHQ7AjQHMapgSue2HJFAh2cGsdokqN3XqmVSj"
        },
        {
          "name": "locker",
          "writable": true
        },
        {
          "name": "escrow",
          "writable": true
        },
        {
          "name": "partial_unstake",
          "writable": true
        },
        {
          "name": "escrow_tokens",
          "writable": true
        },
        {
          "name": "destination_tokens",
          "writable": true
        },
        {
          "name": "token_program"
        }
      ],
      "args": []
    },
    {
      "name": "kamino_lending_deposit_reserve_liquidity_and_obligation_collateral",
      "discriminator": [
        31,
        162,
        4,
        146,
        60,
        225,
        15,
        0
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program"
        },
        {
          "name": "owner",
          "writable": true
        },
        {
          "name": "obligation",
          "writable": true
        },
        {
          "name": "lending_market"
        },
        {
          "name": "lending_market_authority"
        },
        {
          "name": "reserve",
          "writable": true
        },
        {
          "name": "reserve_liquidity_mint",
          "writable": true
        },
        {
          "name": "reserve_liquidity_supply",
          "writable": true
        },
        {
          "name": "reserve_collateral_mint",
          "writable": true
        },
        {
          "name": "reserve_destination_deposit_collateral",
          "writable": true
        },
        {
          "name": "user_source_liquidity",
          "writable": true
        },
        {
          "name": "placeholder_user_destination_collateral"
        },
        {
          "name": "collateral_token_program"
        },
        {
          "name": "liquidity_token_program"
        },
        {
          "name": "instruction_sysvar_account"
        }
      ],
      "args": [
        {
          "name": "liquidity_amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "kamino_lending_init_obligation",
      "discriminator": [
        219,
        210,
        134,
        64,
        155,
        49,
        137,
        174
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program"
        },
        {
          "name": "obligation_owner"
        },
        {
          "name": "fee_payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "obligation",
          "writable": true
        },
        {
          "name": "lending_market"
        },
        {
          "name": "seed1_account"
        },
        {
          "name": "seed2_account"
        },
        {
          "name": "owner_user_metadata"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": {
              "name": "InitObligationArgs"
            }
          }
        }
      ]
    },
    {
      "name": "kamino_lending_init_obligation_farms_for_reserve",
      "discriminator": [
        227,
        61,
        130,
        2,
        117,
        226,
        78,
        1
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "owner"
        },
        {
          "name": "obligation",
          "writable": true
        },
        {
          "name": "lending_market_authority",
          "writable": true
        },
        {
          "name": "reserve",
          "writable": true
        },
        {
          "name": "reserve_farm_state",
          "writable": true
        },
        {
          "name": "obligation_farm",
          "writable": true
        },
        {
          "name": "lending_market"
        },
        {
          "name": "farms_program"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "mode",
          "type": "u8"
        }
      ]
    },
    {
      "name": "kamino_lending_init_user_metadata",
      "discriminator": [
        200,
        95,
        140,
        132,
        190,
        65,
        17,
        161
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program"
        },
        {
          "name": "owner"
        },
        {
          "name": "fee_payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "user_metadata",
          "writable": true
        },
        {
          "name": "referrer_user_metadata"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "user_lookup_table",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "marinade_claim",
      "docs": [
        "Claims tickets that were unstaked in the previous epoch to get SOL.",
        "",
        "# Parameters",
        "- `ctx`: The context containing the required accounts.",
        "",
        "# Permission required",
        "- Permission::Unstake",
        "",
        "# Integration required",
        "- Integration::Marinade"
      ],
      "discriminator": [
        54,
        44,
        48,
        204,
        218,
        141,
        36,
        5
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD"
        },
        {
          "name": "state",
          "writable": true
        },
        {
          "name": "reserve_pda",
          "writable": true
        },
        {
          "name": "ticket_account",
          "writable": true
        },
        {
          "name": "clock"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "marinade_deposit",
      "docs": [
        "Deposits SOL to get mSOL.",
        "",
        "# Parameters",
        "- `ctx`: The context containing the required accounts.",
        "- `lamports`: The amount of SOL (in lamports) to deposit.",
        "",
        "# Permission required",
        "- Permission::Stake",
        "",
        "# Integration required",
        "- Integration::Marinade"
      ],
      "discriminator": [
        62,
        236,
        248,
        28,
        222,
        232,
        182,
        73
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD"
        },
        {
          "name": "state",
          "writable": true
        },
        {
          "name": "msol_mint",
          "writable": true
        },
        {
          "name": "liq_pool_sol_leg_pda",
          "writable": true
        },
        {
          "name": "liq_pool_msol_leg",
          "writable": true
        },
        {
          "name": "liq_pool_msol_leg_authority"
        },
        {
          "name": "reserve_pda",
          "writable": true
        },
        {
          "name": "mint_to",
          "writable": true
        },
        {
          "name": "msol_mint_authority"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "lamports",
          "type": "u64"
        }
      ]
    },
    {
      "name": "marinade_deposit_stake_account",
      "docs": [
        "Deposits a stake account to get mSOL.",
        "",
        "# Parameters",
        "- `ctx`: The context containing the required accounts.",
        "- `validator_idx`: Validator index in Marinade's validator list.",
        "",
        "# Permission required",
        "- Permission::Stake",
        "",
        "# Integration required",
        "- Integration::Marinade"
      ],
      "discriminator": [
        141,
        230,
        58,
        103,
        56,
        205,
        159,
        138
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD"
        },
        {
          "name": "state",
          "writable": true
        },
        {
          "name": "validator_list",
          "writable": true
        },
        {
          "name": "stake_list",
          "writable": true
        },
        {
          "name": "stake_account",
          "writable": true
        },
        {
          "name": "duplication_flag",
          "writable": true
        },
        {
          "name": "msol_mint",
          "writable": true
        },
        {
          "name": "mint_to",
          "writable": true
        },
        {
          "name": "msol_mint_authority"
        },
        {
          "name": "clock"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program"
        },
        {
          "name": "stake_program"
        }
      ],
      "args": [
        {
          "name": "validator_idx",
          "type": "u32"
        }
      ]
    },
    {
      "name": "marinade_liquid_unstake",
      "docs": [
        "Unstakes mSOL to get SOL immediately with a small fee.",
        "",
        "# Parameters",
        "- `ctx`: The context containing the required accounts.",
        "- `msol_amount`: Amount of mSOL to unstake.",
        "",
        "# Permission required",
        "- Permission::Unstake",
        "",
        "# Integration required",
        "- Integration::Marinade"
      ],
      "discriminator": [
        29,
        146,
        34,
        21,
        26,
        68,
        141,
        161
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD"
        },
        {
          "name": "state",
          "writable": true
        },
        {
          "name": "msol_mint",
          "writable": true
        },
        {
          "name": "liq_pool_sol_leg_pda",
          "writable": true
        },
        {
          "name": "liq_pool_msol_leg",
          "writable": true
        },
        {
          "name": "treasury_msol_account",
          "writable": true
        },
        {
          "name": "get_msol_from",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "msol_amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "marinade_order_unstake",
      "docs": [
        "Unstakes mSOL to get a ticket that can be claimed at the next epoch.",
        "",
        "# Parameters",
        "- `ctx`: The context containing the required accounts.",
        "- `msol_amount`: Amount of mSOL to unstake.",
        "",
        "# Permission required",
        "- Permission::Unstake",
        "",
        "# Integration required",
        "- Integration::Marinade"
      ],
      "discriminator": [
        202,
        3,
        33,
        27,
        183,
        156,
        57,
        231
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD"
        },
        {
          "name": "state",
          "writable": true
        },
        {
          "name": "msol_mint",
          "writable": true
        },
        {
          "name": "burn_msol_from",
          "writable": true
        },
        {
          "name": "new_ticket_account",
          "writable": true
        },
        {
          "name": "clock"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "msol_amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "merge_stake_accounts",
      "docs": [
        "Merges two stake accounts.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::Stake",
        "",
        "# Integration required",
        "- Integration::NativeStaking"
      ],
      "discriminator": [
        173,
        206,
        10,
        246,
        109,
        50,
        244,
        110
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "to_stake",
          "writable": true
        },
        {
          "name": "from_stake",
          "writable": true
        },
        {
          "name": "clock",
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "stake_history",
          "address": "SysvarStakeHistory1111111111111111111111111"
        },
        {
          "name": "stake_program",
          "address": "Stake11111111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "meteora_dlmm_add_liquidity_by_strategy",
      "discriminator": [
        81,
        139,
        59,
        146,
        176,
        196,
        240,
        216
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo"
        },
        {
          "name": "position",
          "writable": true
        },
        {
          "name": "lb_pair",
          "writable": true
        },
        {
          "name": "bin_array_bitmap_extension",
          "writable": true
        },
        {
          "name": "user_token_x",
          "writable": true
        },
        {
          "name": "user_token_y",
          "writable": true
        },
        {
          "name": "reserve_x",
          "writable": true
        },
        {
          "name": "reserve_y",
          "writable": true
        },
        {
          "name": "token_x_mint"
        },
        {
          "name": "token_y_mint"
        },
        {
          "name": "bin_array_lower",
          "writable": true
        },
        {
          "name": "bin_array_upper",
          "writable": true
        },
        {
          "name": "token_x_program"
        },
        {
          "name": "token_y_program"
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "LiquidityParameterByStrategy"
            }
          }
        }
      ]
    },
    {
      "name": "meteora_dlmm_claim_fee",
      "discriminator": [
        78,
        116,
        98,
        78,
        50,
        82,
        72,
        37
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo"
        },
        {
          "name": "lb_pair",
          "writable": true
        },
        {
          "name": "position",
          "writable": true
        },
        {
          "name": "bin_array_lower",
          "writable": true
        },
        {
          "name": "bin_array_upper",
          "writable": true
        },
        {
          "name": "reserve_x",
          "writable": true
        },
        {
          "name": "reserve_y",
          "writable": true
        },
        {
          "name": "user_token_x",
          "writable": true
        },
        {
          "name": "user_token_y",
          "writable": true
        },
        {
          "name": "token_x_mint"
        },
        {
          "name": "token_y_mint"
        },
        {
          "name": "token_program"
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "meteora_dlmm_close_position",
      "discriminator": [
        186,
        117,
        42,
        24,
        221,
        194,
        34,
        143
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo"
        },
        {
          "name": "position",
          "writable": true
        },
        {
          "name": "lb_pair",
          "writable": true
        },
        {
          "name": "bin_array_lower",
          "writable": true
        },
        {
          "name": "bin_array_upper",
          "writable": true
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "meteora_dlmm_initialize_position",
      "discriminator": [
        223,
        94,
        215,
        96,
        175,
        181,
        195,
        204
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo"
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "position",
          "writable": true,
          "signer": true
        },
        {
          "name": "lb_pair"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "lower_bin_id",
          "type": "i32"
        },
        {
          "name": "width",
          "type": "i32"
        }
      ]
    },
    {
      "name": "meteora_dlmm_remove_liquidity_by_range",
      "discriminator": [
        223,
        12,
        177,
        181,
        96,
        109,
        60,
        124
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo"
        },
        {
          "name": "position",
          "writable": true
        },
        {
          "name": "lb_pair",
          "writable": true
        },
        {
          "name": "bin_array_bitmap_extension",
          "writable": true
        },
        {
          "name": "user_token_x",
          "writable": true
        },
        {
          "name": "user_token_y",
          "writable": true
        },
        {
          "name": "reserve_x",
          "writable": true
        },
        {
          "name": "reserve_y",
          "writable": true
        },
        {
          "name": "token_x_mint"
        },
        {
          "name": "token_y_mint"
        },
        {
          "name": "bin_array_lower",
          "writable": true
        },
        {
          "name": "bin_array_upper",
          "writable": true
        },
        {
          "name": "token_x_program"
        },
        {
          "name": "token_y_program"
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "from_bin_id",
          "type": "i32"
        },
        {
          "name": "to_bin_id",
          "type": "i32"
        },
        {
          "name": "bps_to_remove",
          "type": "u16"
        }
      ]
    },
    {
      "name": "meteora_dlmm_swap",
      "discriminator": [
        127,
        64,
        37,
        138,
        173,
        243,
        207,
        84
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "cpi_program",
          "address": "LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo"
        },
        {
          "name": "lb_pair",
          "writable": true
        },
        {
          "name": "bin_array_bitmap_extension"
        },
        {
          "name": "reserve_x",
          "writable": true
        },
        {
          "name": "reserve_y",
          "writable": true
        },
        {
          "name": "user_token_in",
          "writable": true
        },
        {
          "name": "user_token_out",
          "writable": true
        },
        {
          "name": "token_x_mint"
        },
        {
          "name": "token_y_mint"
        },
        {
          "name": "oracle",
          "writable": true
        },
        {
          "name": "host_fee_in",
          "writable": true
        },
        {
          "name": "token_x_program"
        },
        {
          "name": "token_y_program"
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "amount_in",
          "type": "u64"
        },
        {
          "name": "min_amount_out",
          "type": "u64"
        }
      ]
    },
    {
      "name": "mint_tokens",
      "docs": [
        "Mints a specified amount of tokens for the given mint.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `mint_id`: The id of the mint to mint tokens for.",
        "- `amount`: The amount of tokens to mint.",
        "",
        "# Permission required",
        "- Permission::MintTokens",
        "",
        "# Integration required",
        "- Integration::Mint"
      ],
      "discriminator": [
        59,
        132,
        24,
        246,
        122,
        39,
        8,
        243
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "glam_mint",
          "writable": true
        },
        {
          "name": "mint_to",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "recipient"
              },
              {
                "kind": "account",
                "path": "token_2022_program"
              },
              {
                "kind": "account",
                "path": "glam_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "recipient"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": [
        {
          "name": "mint_id",
          "type": "u8"
        },
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "redeem",
      "docs": [
        "Redeems a specified amount of shares.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `amount`: The amount of shares to redeem.",
        "- `in_kind`: Whether to redeem in kind.",
        "- `skip_state`: Should always be true (state check to be implemented)."
      ],
      "discriminator": [
        184,
        12,
        86,
        149,
        70,
        196,
        97,
        225
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_mint",
          "writable": true
        },
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "signer_share_ata",
          "writable": true
        },
        {
          "name": "signer_policy",
          "writable": true,
          "optional": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116,
                  45,
                  112,
                  111,
                  108,
                  105,
                  99,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "signer_share_ata"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "in_kind",
          "type": "bool"
        },
        {
          "name": "skip_state",
          "type": "bool"
        }
      ]
    },
    {
      "name": "redelegate_stake",
      "docs": [
        "Redelegates an existing stake account to a new validator (a new stake account will be created).",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::Unstake",
        "",
        "# Integration required",
        "- Integration::NativeStaking"
      ],
      "discriminator": [
        240,
        90,
        140,
        104,
        96,
        8,
        134,
        31
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "existing_stake",
          "writable": true
        },
        {
          "name": "new_stake",
          "writable": true
        },
        {
          "name": "vote"
        },
        {
          "name": "stake_config"
        },
        {
          "name": "clock",
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "stake_program",
          "address": "Stake11111111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "set_subscribe_redeem_enabled",
      "docs": [
        "Enables or disables the subscribe and redeem functionality.",
        "",
        "This allows the owner to pause/unpause subscription and redemption of a fund.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `enabled`: A boolean indicating whether to enable or disable the subscribe and redeem functionality.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        189,
        56,
        205,
        172,
        201,
        185,
        34,
        92
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "enabled",
          "type": "bool"
        }
      ]
    },
    {
      "name": "set_token_accounts_states",
      "docs": [
        "Sets the frozen state of the token accounts for the specified mint.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `mint_id`: The id of the mint to set the frozen state for.",
        "- `frozen`: The new frozen state.",
        "",
        "# Permission required",
        "- Permission::SetTokenAccountState",
        "",
        "# Integration required",
        "- Integration::Mint"
      ],
      "discriminator": [
        50,
        133,
        45,
        86,
        117,
        66,
        115,
        195
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "glam_mint",
          "writable": true
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": [
        {
          "name": "mint_id",
          "type": "u8"
        },
        {
          "name": "frozen",
          "type": "bool"
        }
      ]
    },
    {
      "name": "split_stake_account",
      "docs": [
        "Splits from an existing stake account to get a new stake account.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `lamports`: The amount of SOL to split.",
        "",
        "# Permission required",
        "- Permission::Unstake",
        "",
        "# Integration required",
        "- Integration::NativeStaking"
      ],
      "discriminator": [
        130,
        42,
        33,
        89,
        117,
        77,
        105,
        194
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "existing_stake",
          "writable": true
        },
        {
          "name": "new_stake",
          "writable": true
        },
        {
          "name": "clock",
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "stake_program",
          "address": "Stake11111111111111111111111111111111111111"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "lamports",
          "type": "u64"
        }
      ]
    },
    {
      "name": "stake_pool_deposit_sol",
      "docs": [
        "Deposits SOL to a stake pool to get pool token.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `lamports`: The amount of SOL to deposit.",
        "",
        "# Permission required",
        "- Permission::Stake",
        "",
        "# Integration required",
        "- Integration::SplStakePool or Integration::SanctumStakePool, depending on the stake pool program used."
      ],
      "discriminator": [
        147,
        187,
        91,
        151,
        158,
        187,
        247,
        79
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "stake_pool",
          "writable": true
        },
        {
          "name": "withdraw_authority"
        },
        {
          "name": "reserve_stake",
          "writable": true
        },
        {
          "name": "pool_mint",
          "writable": true
        },
        {
          "name": "fee_account",
          "writable": true
        },
        {
          "name": "mint_to",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "glam_vault"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "pool_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "stake_pool_program"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "lamports",
          "type": "u64"
        }
      ]
    },
    {
      "name": "stake_pool_deposit_stake",
      "docs": [
        "Deposits a stake account to a stake pool to get pool token.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::Stake",
        "",
        "# Integration required",
        "- Integration::SplStakePool or Integration::SanctumStakePool, depending on the stake pool program used."
      ],
      "discriminator": [
        212,
        158,
        195,
        174,
        179,
        105,
        9,
        97
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "vault_stake_account",
          "writable": true
        },
        {
          "name": "mint_to",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "glam_vault"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "pool_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "pool_mint",
          "writable": true
        },
        {
          "name": "fee_account",
          "writable": true
        },
        {
          "name": "stake_pool",
          "writable": true
        },
        {
          "name": "deposit_authority"
        },
        {
          "name": "withdraw_authority"
        },
        {
          "name": "validator_list",
          "writable": true
        },
        {
          "name": "validator_stake_account",
          "writable": true
        },
        {
          "name": "reserve_stake_account",
          "writable": true
        },
        {
          "name": "clock",
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "stake_history",
          "address": "SysvarStakeHistory1111111111111111111111111"
        },
        {
          "name": "stake_pool_program"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program"
        },
        {
          "name": "stake_program",
          "address": "Stake11111111111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "stake_pool_withdraw_sol",
      "docs": [
        "Unstakes from pool token to get SOL immediately.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `pool_token_amount`: Amount of pool token to unstake.",
        "",
        "# Permission required",
        "- Permission::LiquidUnstake",
        "",
        "# Integration required",
        "- Integration::SplStakePool or Integration::SanctumStakePool, depending on the stake pool program used."
      ],
      "discriminator": [
        179,
        100,
        204,
        0,
        192,
        46,
        233,
        181
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "stake_pool",
          "writable": true
        },
        {
          "name": "withdraw_authority"
        },
        {
          "name": "reserve_stake",
          "writable": true
        },
        {
          "name": "pool_mint",
          "writable": true
        },
        {
          "name": "fee_account",
          "writable": true
        },
        {
          "name": "pool_token_ata",
          "writable": true
        },
        {
          "name": "clock",
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "stake_history",
          "address": "SysvarStakeHistory1111111111111111111111111"
        },
        {
          "name": "stake_pool_program"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program"
        },
        {
          "name": "stake_program",
          "address": "Stake11111111111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "pool_token_amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "stake_pool_withdraw_stake",
      "docs": [
        "Unstakes from pool token into a stake account.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `pool_token_amount`: Amount of pool token to unstake.",
        "",
        "# Permission required",
        "- Permission::Unstake",
        "",
        "# Integration required",
        "- Integration::SplStakePool or Integration::SanctumStakePool, depending on the stake pool program used."
      ],
      "discriminator": [
        7,
        70,
        250,
        22,
        49,
        1,
        143,
        1
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "vault_stake_account",
          "writable": true
        },
        {
          "name": "pool_mint",
          "writable": true
        },
        {
          "name": "fee_account",
          "writable": true
        },
        {
          "name": "stake_pool",
          "writable": true
        },
        {
          "name": "withdraw_authority"
        },
        {
          "name": "validator_list",
          "writable": true
        },
        {
          "name": "validator_stake_account",
          "writable": true
        },
        {
          "name": "pool_token_ata",
          "writable": true
        },
        {
          "name": "clock",
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "stake_pool_program"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program"
        },
        {
          "name": "stake_program",
          "address": "Stake11111111111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "pool_token_amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "subscribe",
      "docs": [
        "Subscribes to a specified amount of shares.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `amount`: The amount of shares to subscribe.",
        "- `skip_state`: Should always be true (state check to be implemented)."
      ],
      "discriminator": [
        254,
        28,
        191,
        138,
        156,
        179,
        183,
        53
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_mint",
          "writable": true
        },
        {
          "name": "signer_share_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "signer"
              },
              {
                "kind": "account",
                "path": "token_2022_program"
              },
              {
                "kind": "account",
                "path": "glam_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "asset"
        },
        {
          "name": "vault_ata",
          "writable": true
        },
        {
          "name": "signer_asset_ata",
          "writable": true
        },
        {
          "name": "signer_policy",
          "writable": true,
          "optional": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116,
                  45,
                  112,
                  111,
                  108,
                  105,
                  99,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "signer_share_ata"
              }
            ]
          }
        },
        {
          "name": "signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": [
        {
          "name": "mint_id",
          "type": "u8"
        },
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "skip_state",
          "type": "bool"
        }
      ]
    },
    {
      "name": "transfer_hook",
      "discriminator": [
        105,
        37,
        101,
        197,
        75,
        251,
        102,
        26
      ],
      "accounts": [
        {
          "name": "src_account"
        },
        {
          "name": "mint"
        },
        {
          "name": "dst_account"
        },
        {
          "name": "owner"
        },
        {
          "name": "extra_account_meta_list",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  101,
                  120,
                  116,
                  114,
                  97,
                  45,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116,
                  45,
                  109,
                  101,
                  116,
                  97,
                  115
                ]
              },
              {
                "kind": "account",
                "path": "mint"
              }
            ]
          }
        },
        {
          "name": "state"
        },
        {
          "name": "src_account_policy",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116,
                  45,
                  112,
                  111,
                  108,
                  105,
                  99,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "src_account"
              }
            ]
          }
        },
        {
          "name": "dst_account_policy",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116,
                  45,
                  112,
                  111,
                  108,
                  105,
                  99,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "dst_account"
              }
            ]
          }
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "transfer_sol_to_wsol",
      "docs": [
        "Transfer vault SOL to wSOL token account.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `lamports`: The amount of SOL to transfer.",
        "",
        "# Permission required",
        "- Permission::WSolWrap"
      ],
      "discriminator": [
        42,
        189,
        85,
        229,
        150,
        198,
        3,
        195
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "to",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "glam_vault"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "const",
                "value": [
                  6,
                  155,
                  136,
                  87,
                  254,
                  171,
                  129,
                  132,
                  251,
                  104,
                  127,
                  99,
                  70,
                  24,
                  192,
                  53,
                  218,
                  196,
                  57,
                  220,
                  26,
                  235,
                  59,
                  85,
                  152,
                  160,
                  240,
                  0,
                  0,
                  0,
                  0,
                  1
                ]
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        }
      ],
      "args": [
        {
          "name": "lamports",
          "type": "u64"
        }
      ]
    },
    {
      "name": "update_mint",
      "docs": [
        "Updates an existing mint with new metadata.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `mint_id`: The id of the mint to be updated.",
        "- `mint_model`: An instance of `MintModel` containing the updated metadata for the new mint.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        212,
        203,
        57,
        78,
        75,
        245,
        222,
        5
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "glam_mint",
          "writable": true
        },
        {
          "name": "token_2022_program",
          "address": "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"
        }
      ],
      "args": [
        {
          "name": "mint_id",
          "type": "u8"
        },
        {
          "name": "mint_model",
          "type": {
            "defined": {
              "name": "MintModel"
            }
          }
        }
      ]
    },
    {
      "name": "update_state",
      "docs": [
        "Updates an existing state account with new parameters.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `state`: An instance of `StateModel` containing the updated details of the state.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        135,
        112,
        215,
        75,
        247,
        185,
        53,
        176
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "state",
          "type": {
            "defined": {
              "name": "StateModel"
            }
          }
        }
      ]
    },
    {
      "name": "withdraw",
      "docs": [
        "Withdraw asset from vault into owner's wallet.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `amount`: The amount to withdraw.",
        "",
        "# Permission required",
        "- Owner only, delegates not allowed"
      ],
      "discriminator": [
        183,
        18,
        70,
        156,
        148,
        109,
        161,
        34
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "asset"
        },
        {
          "name": "vault_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "glam_vault"
              },
              {
                "kind": "account",
                "path": "token_program"
              },
              {
                "kind": "account",
                "path": "asset"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "signer_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "glam_signer"
              },
              {
                "kind": "account",
                "path": "token_program"
              },
              {
                "kind": "account",
                "path": "asset"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "withdraw_from_stake_accounts",
      "docs": [
        "Withdraws SOL from stake accounts.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::Unstake",
        "",
        "# Integration required",
        "- Integration::NativeStaking"
      ],
      "discriminator": [
        93,
        209,
        100,
        231,
        169,
        160,
        192,
        197
      ],
      "accounts": [
        {
          "name": "glam_state",
          "writable": true
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "clock",
          "address": "SysvarC1ock11111111111111111111111111111111"
        },
        {
          "name": "stake_history",
          "address": "SysvarStakeHistory1111111111111111111111111"
        },
        {
          "name": "stake_program",
          "address": "Stake11111111111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "wsol_unwrap",
      "docs": [
        "Unwraps all wSOL to get SOL.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "",
        "# Permission required",
        "- Permission::WSolUnwrap"
      ],
      "discriminator": [
        123,
        189,
        16,
        96,
        233,
        186,
        54,
        215
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "vault_wsol_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "glam_vault"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "const",
                "value": [
                  6,
                  155,
                  136,
                  87,
                  254,
                  171,
                  129,
                  132,
                  251,
                  104,
                  127,
                  99,
                  70,
                  24,
                  192,
                  53,
                  218,
                  196,
                  57,
                  220,
                  26,
                  235,
                  59,
                  85,
                  152,
                  160,
                  240,
                  0,
                  0,
                  0,
                  0,
                  1
                ]
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": []
    },
    {
      "name": "wsol_wrap",
      "docs": [
        "Wraps SOL to get wSOL.",
        "",
        "# Parameters",
        "- `ctx`: The context for the instruction.",
        "- `lamports`: The amount of SOL to wrap.",
        "",
        "# Permission required",
        "- Permission::WSolWrap"
      ],
      "discriminator": [
        26,
        2,
        139,
        159,
        239,
        195,
        193,
        9
      ],
      "accounts": [
        {
          "name": "glam_state"
        },
        {
          "name": "glam_vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "glam_state"
              }
            ]
          }
        },
        {
          "name": "glam_signer",
          "writable": true,
          "signer": true
        },
        {
          "name": "vault_wsol_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "glam_vault"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "wsol_mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "wsol_mint"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        }
      ],
      "args": [
        {
          "name": "lamports",
          "type": "u64"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "OpenfundsMetadataAccount",
      "discriminator": [
        5,
        89,
        20,
        76,
        255,
        158,
        209,
        219
      ]
    },
    {
      "name": "PolicyAccount",
      "discriminator": [
        218,
        201,
        183,
        164,
        156,
        127,
        81,
        175
      ]
    },
    {
      "name": "StateAccount",
      "discriminator": [
        142,
        247,
        54,
        95,
        85,
        133,
        249,
        103
      ]
    }
  ],
  "errors": [
    {
      "code": 48000,
      "name": "NotAuthorized",
      "msg": "Signer is not authorized"
    },
    {
      "code": 48001,
      "name": "IntegrationDisabled",
      "msg": "Integration is disabled"
    },
    {
      "code": 48002,
      "name": "StateAccountDisabled",
      "msg": "State account is disabled"
    },
    {
      "code": 48003,
      "name": "InvalidSignerAccount",
      "msg": "Invalid signer ata"
    },
    {
      "code": 49000,
      "name": "InvalidAccountType",
      "msg": "Invalid account type"
    },
    {
      "code": 49001,
      "name": "InvalidName",
      "msg": "Name too long: max 64 chars"
    },
    {
      "code": 49002,
      "name": "InvalidSymbol",
      "msg": "Symbol too long: max 32 chars"
    },
    {
      "code": 49003,
      "name": "InvalidUri",
      "msg": "Uri too long: max 128 chars"
    },
    {
      "code": 49004,
      "name": "InvalidAssetsLen",
      "msg": "Too many assets: max 100"
    },
    {
      "code": 49005,
      "name": "CloseNotEmptyError",
      "msg": "Error closing state account: not empty"
    },
    {
      "code": 49006,
      "name": "NoShareClass",
      "msg": "No share class found"
    },
    {
      "code": 49007,
      "name": "ShareClassesNotClosed",
      "msg": "Glam state account can't be closed. Close share classes first"
    },
    {
      "code": 49008,
      "name": "InvalidShareClass",
      "msg": "Share class not allowed to subscribe"
    },
    {
      "code": 49009,
      "name": "InvalidAssetSubscribe",
      "msg": "Asset not allowed to subscribe"
    },
    {
      "code": 49010,
      "name": "InvalidPricingOracle",
      "msg": "Invalid oracle for asset price"
    },
    {
      "code": 49011,
      "name": "InvalidRemainingAccounts",
      "msg": "Invalid accounts: the transaction is malformed"
    },
    {
      "code": 49012,
      "name": "InvalidVaultTokenAccount",
      "msg": "Invalid vault ata"
    },
    {
      "code": 49013,
      "name": "ShareClassNotEmpty",
      "msg": "Share class mint supply not zero"
    },
    {
      "code": 50000,
      "name": "WithdrawDenied",
      "msg": "Withdraw denied. Only vaults allow withdraws (funds and mints don't)"
    },
    {
      "code": 50001,
      "name": "InvalidAssetForSwap",
      "msg": "Asset cannot be swapped"
    },
    {
      "code": 50002,
      "name": "InvalidSwap",
      "msg": "Swap failed"
    },
    {
      "code": 50003,
      "name": "InvalidTokenAccount",
      "msg": "Invalid token account"
    },
    {
      "code": 50004,
      "name": "InvalidVoteSide",
      "msg": "Invalid vote side"
    },
    {
      "code": 51000,
      "name": "InvalidAssetPrice",
      "msg": "Invalid asset price"
    },
    {
      "code": 51001,
      "name": "InvalidStableCoinPriceForSubscribe",
      "msg": "Subscription not allowed: invalid stable coin price"
    },
    {
      "code": 51002,
      "name": "SubscribeRedeemDisable",
      "msg": "Subscription and redemption disabled"
    },
    {
      "code": 51003,
      "name": "InvalidPolicyAccount",
      "msg": "Policy account is mandatory"
    },
    {
      "code": 51004,
      "name": "PricingError",
      "msg": "Pricing error"
    },
    {
      "code": 51005,
      "name": "PriceTooOld",
      "msg": "Price is too old"
    },
    {
      "code": 52000,
      "name": "TransfersDisabled",
      "msg": "Policy violation: transfers disabled"
    },
    {
      "code": 52001,
      "name": "AmountTooBig",
      "msg": "Policy violation: amount too big"
    },
    {
      "code": 52002,
      "name": "LockUp",
      "msg": "Policy violation: lock-up period"
    }
  ],
  "types": [
    {
      "name": "AccountType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Vault"
          },
          {
            "name": "Mint"
          },
          {
            "name": "Fund"
          }
        ]
      }
    },
    {
      "name": "CompanyField",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": {
              "defined": {
                "name": "CompanyFieldName"
              }
            }
          },
          {
            "name": "value",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "CompanyFieldName",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "FundGroupName"
          },
          {
            "name": "ManCo"
          },
          {
            "name": "DomicileOfManCo"
          },
          {
            "name": "BICOfCustodian"
          },
          {
            "name": "CollateralManagerName"
          },
          {
            "name": "CustodianBankName"
          },
          {
            "name": "DomicileOfCustodianBank"
          },
          {
            "name": "FundAdministratorName"
          },
          {
            "name": "FundAdvisorName"
          },
          {
            "name": "FundPromoterName"
          },
          {
            "name": "IsSelfManagedInvestmentCompany"
          },
          {
            "name": "LEIOfCustodianBank"
          },
          {
            "name": "LEIOfManCo"
          },
          {
            "name": "PortfolioManagingCompanyName"
          },
          {
            "name": "SecuritiesLendingCounterpartyName"
          },
          {
            "name": "SwapCounterpartyName"
          },
          {
            "name": "AddressofManCo"
          },
          {
            "name": "AuditorName"
          },
          {
            "name": "CityofManCo"
          },
          {
            "name": "EmailAddressOfManCo"
          },
          {
            "name": "FundWebsiteOfManCo"
          },
          {
            "name": "IsUNPRISignatory"
          },
          {
            "name": "PhoneCountryCodeofManCo"
          },
          {
            "name": "PhoneNumberofManCo"
          },
          {
            "name": "SubInvestmentAdvisorName"
          },
          {
            "name": "ZIPCodeofManCo"
          },
          {
            "name": "DomicileOfUmbrella"
          },
          {
            "name": "HasUmbrella"
          },
          {
            "name": "LEIOfUmbrella"
          },
          {
            "name": "Umbrella"
          },
          {
            "name": "GlobalIntermediaryIdentificationNumberOfUmbrella"
          }
        ]
      }
    },
    {
      "name": "CompanyModel",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fund_group_name",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "man_co",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "domicile_of_man_co",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "email_address_of_man_co",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "fund_website_of_man_co",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "CreatedModel",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "array": [
                "u8",
                8
              ]
            }
          },
          {
            "name": "created_by",
            "type": "pubkey"
          },
          {
            "name": "created_at",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "DelegateAcl",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "pubkey",
            "type": "pubkey"
          },
          {
            "name": "permissions",
            "type": {
              "vec": {
                "defined": {
                  "name": "Permission"
                }
              }
            }
          },
          {
            "name": "expires_at",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "EngineField",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": {
              "defined": {
                "name": "EngineFieldName"
              }
            }
          },
          {
            "name": "value",
            "type": {
              "defined": {
                "name": "EngineFieldValue"
              }
            }
          }
        ]
      }
    },
    {
      "name": "EngineFieldName",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Allowlist"
          },
          {
            "name": "Blocklist"
          },
          {
            "name": "ExternalVaultAccounts"
          },
          {
            "name": "LockUp"
          },
          {
            "name": "DriftMarketIndexesPerp"
          },
          {
            "name": "DriftMarketIndexesSpot"
          },
          {
            "name": "DriftOrderTypes"
          },
          {
            "name": "MaxSwapSlippageBps"
          }
        ]
      }
    },
    {
      "name": "EngineFieldValue",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Boolean",
            "fields": [
              {
                "name": "val",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Date",
            "fields": [
              {
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "Double",
            "fields": [
              {
                "name": "val",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Integer",
            "fields": [
              {
                "name": "val",
                "type": "i32"
              }
            ]
          },
          {
            "name": "String",
            "fields": [
              {
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "Time",
            "fields": [
              {
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "U8",
            "fields": [
              {
                "name": "val",
                "type": "u8"
              }
            ]
          },
          {
            "name": "U64",
            "fields": [
              {
                "name": "val",
                "type": "u64"
              }
            ]
          },
          {
            "name": "Pubkey",
            "fields": [
              {
                "name": "val",
                "type": "pubkey"
              }
            ]
          },
          {
            "name": "Percentage",
            "fields": [
              {
                "name": "val",
                "type": "u32"
              }
            ]
          },
          {
            "name": "URI",
            "fields": [
              {
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "Timestamp",
            "fields": [
              {
                "name": "val",
                "type": "i64"
              }
            ]
          },
          {
            "name": "VecPubkey",
            "fields": [
              {
                "name": "val",
                "type": {
                  "vec": "pubkey"
                }
              }
            ]
          },
          {
            "name": "VecU32",
            "fields": [
              {
                "name": "val",
                "type": {
                  "vec": "u32"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "FundField",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": {
              "defined": {
                "name": "FundFieldName"
              }
            }
          },
          {
            "name": "value",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "FundFieldName",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "FundDomicileAlpha2"
          },
          {
            "name": "FundDomicileAlpha3"
          },
          {
            "name": "LegalFundNameIncludingUmbrella"
          },
          {
            "name": "FiscalYearEnd"
          },
          {
            "name": "FundCurrency"
          },
          {
            "name": "FundLaunchDate"
          },
          {
            "name": "InvestmentObjective"
          },
          {
            "name": "IsETC"
          },
          {
            "name": "IsEUDirectiveRelevant"
          },
          {
            "name": "IsFundOfFunds"
          },
          {
            "name": "IsPassiveFund"
          },
          {
            "name": "IsREIT"
          },
          {
            "name": "LegalForm"
          },
          {
            "name": "LegalFundNameOnly"
          },
          {
            "name": "OpenEndedOrClosedEndedFundStructure"
          },
          {
            "name": "TypeOfEUDirective"
          },
          {
            "name": "UCITSVersion"
          },
          {
            "name": "CurrencyHedgePortfolio"
          },
          {
            "name": "DepositoryName"
          },
          {
            "name": "FundValuationPoint"
          },
          {
            "name": "FundValuationPointTimeZone"
          },
          {
            "name": "FundValuationPointTimeZoneUsingTZDatabase"
          },
          {
            "name": "HasCollateralManager"
          },
          {
            "name": "HasEmbeddedDerivatives"
          },
          {
            "name": "HasSecuritiesLending"
          },
          {
            "name": "HasSwap"
          },
          {
            "name": "IsLeveraged"
          },
          {
            "name": "IsShariaCompliant"
          },
          {
            "name": "IsShort"
          },
          {
            "name": "LEIofDepositoryBank"
          },
          {
            "name": "LEIOfFund"
          },
          {
            "name": "LocationOfBearerShare"
          },
          {
            "name": "LocationOfShareRegister"
          },
          {
            "name": "MaximumLeverageInFund"
          },
          {
            "name": "MiFIDSecuritiesClassification"
          },
          {
            "name": "MoneyMarketTypeOfFund"
          },
          {
            "name": "TrusteeName"
          },
          {
            "name": "AuMFund"
          },
          {
            "name": "AuMFundDate"
          },
          {
            "name": "NoSFund"
          },
          {
            "name": "NoSFundDate"
          }
        ]
      }
    },
    {
      "name": "FundManagerField",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": {
              "defined": {
                "name": "FundManagerFieldName"
              }
            }
          },
          {
            "name": "value",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "FundManagerFieldName",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "PortfolioManagerForename"
          },
          {
            "name": "PortfolioManagerName"
          },
          {
            "name": "PortfolioManagerYearOfBirth"
          },
          {
            "name": "PortfolioManagerYearOfExperienceStart"
          },
          {
            "name": "PortfolioManagerBriefBiography"
          },
          {
            "name": "PortfolioManagerType"
          },
          {
            "name": "PortfolioManagerRoleStartingDate"
          },
          {
            "name": "PortfolioManagerRoleEndDate"
          }
        ]
      }
    },
    {
      "name": "FundOpenfundsModel",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fund_domicile_alpha_2",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "legal_fund_name_including_umbrella",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "fiscal_year_end",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "fund_currency",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "fund_launch_date",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "investment_objective",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "is_etc",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "is_eu_directive_relevant",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "is_fund_of_funds",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "is_passive_fund",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "is_reit",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "legal_form",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "legal_fund_name_only",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "open_ended_or_closed_ended_fund_structure",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "type_of_eu_directive",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "ucits_version",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "InitObligationArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "tag",
            "type": "u8"
          },
          {
            "name": "id",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "Integration",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Drift"
          },
          {
            "name": "SplStakePool"
          },
          {
            "name": "SanctumStakePool"
          },
          {
            "name": "NativeStaking"
          },
          {
            "name": "Marinade"
          },
          {
            "name": "JupiterSwap"
          },
          {
            "name": "JupiterVote"
          },
          {
            "name": "KaminoLending"
          },
          {
            "name": "MeteoraDlmm"
          }
        ]
      }
    },
    {
      "name": "LiquidityParameterByStrategy",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "amount_x",
            "type": "u64"
          },
          {
            "name": "amount_y",
            "type": "u64"
          },
          {
            "name": "active_id",
            "type": "i32"
          },
          {
            "name": "max_active_bin_slippage",
            "type": "i32"
          },
          {
            "name": "strategy_parameters",
            "type": {
              "defined": {
                "name": "StrategyParameters"
              }
            }
          }
        ]
      }
    },
    {
      "name": "ManagerKind",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Wallet"
          },
          {
            "name": "Squads"
          }
        ]
      }
    },
    {
      "name": "ManagerModel",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "portfolio_manager_name",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "pubkey",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "kind",
            "type": {
              "option": {
                "defined": {
                  "name": "ManagerKind"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "MarketType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Spot"
          },
          {
            "name": "Perp"
          }
        ]
      }
    },
    {
      "name": "Metadata",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "template",
            "type": {
              "defined": {
                "name": "MetadataTemplate"
              }
            }
          },
          {
            "name": "pubkey",
            "type": "pubkey"
          },
          {
            "name": "uri",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "MetadataTemplate",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Openfunds"
          }
        ]
      }
    },
    {
      "name": "MintModel",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "symbol",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "name",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "uri",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "state_pubkey",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "asset",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "image_uri",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "allowlist",
            "type": {
              "option": {
                "vec": "pubkey"
              }
            }
          },
          {
            "name": "blocklist",
            "type": {
              "option": {
                "vec": "pubkey"
              }
            }
          },
          {
            "name": "lock_up_period_in_seconds",
            "type": {
              "option": "i32"
            }
          },
          {
            "name": "permanent_delegate",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "default_account_state_frozen",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "is_raw_openfunds",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "raw_openfunds",
            "type": {
              "option": {
                "defined": {
                  "name": "MintOpenfundsModel"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "MintOpenfundsModel",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "isin",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "share_class_currency",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "currency_of_minimal_subscription",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "full_share_class_name",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "investment_status",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "minimal_initial_subscription_category",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "minimal_initial_subscription_in_amount",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "minimal_initial_subscription_in_shares",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "share_class_distribution_policy",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "share_class_extension",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "share_class_launch_date",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "share_class_lifecycle",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "launch_price",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "launch_price_currency",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "launch_price_date",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "currency_of_minimal_or_maximum_redemption",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "has_lock_up_for_redemption",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "is_valid_isin",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "lock_up_comment",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "lock_up_period_in_days",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "maximum_initial_redemption_in_amount",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "maximum_initial_redemption_in_shares",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "minimal_initial_redemption_in_amount",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "minimal_initial_redemption_in_shares",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "minimal_redemption_category",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "share_class_dividend_type",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "cusip",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "valor",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "ModifyOrderParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "direction",
            "type": {
              "option": {
                "defined": {
                  "name": "PositionDirection"
                }
              }
            }
          },
          {
            "name": "base_asset_amount",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "price",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "reduce_only",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "post_only",
            "type": {
              "option": {
                "defined": {
                  "name": "PostOnlyParam"
                }
              }
            }
          },
          {
            "name": "immediate_or_cancel",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "max_ts",
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "trigger_price",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "trigger_condition",
            "type": {
              "option": {
                "defined": {
                  "name": "OrderTriggerCondition"
                }
              }
            }
          },
          {
            "name": "oracle_price_offset",
            "type": {
              "option": "i32"
            }
          },
          {
            "name": "auction_duration",
            "type": {
              "option": "u8"
            }
          },
          {
            "name": "auction_start_price",
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "auction_end_price",
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "policy",
            "type": {
              "option": "u8"
            }
          }
        ]
      }
    },
    {
      "name": "OpenfundsMetadataAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fund_id",
            "type": "pubkey"
          },
          {
            "name": "company",
            "type": {
              "vec": {
                "defined": {
                  "name": "CompanyField"
                }
              }
            }
          },
          {
            "name": "fund",
            "type": {
              "vec": {
                "defined": {
                  "name": "FundField"
                }
              }
            }
          },
          {
            "name": "share_classes",
            "type": {
              "vec": {
                "vec": {
                  "defined": {
                    "name": "ShareClassField"
                  }
                }
              }
            }
          },
          {
            "name": "fund_managers",
            "type": {
              "vec": {
                "vec": {
                  "defined": {
                    "name": "FundManagerField"
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "OrderParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "order_type",
            "type": {
              "defined": {
                "name": "OrderType"
              }
            }
          },
          {
            "name": "market_type",
            "type": {
              "defined": {
                "name": "MarketType"
              }
            }
          },
          {
            "name": "direction",
            "type": {
              "defined": {
                "name": "PositionDirection"
              }
            }
          },
          {
            "name": "user_order_id",
            "type": "u8"
          },
          {
            "name": "base_asset_amount",
            "type": "u64"
          },
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "market_index",
            "type": "u16"
          },
          {
            "name": "reduce_only",
            "type": "bool"
          },
          {
            "name": "post_only",
            "type": {
              "defined": {
                "name": "PostOnlyParam"
              }
            }
          },
          {
            "name": "immediate_or_cancel",
            "type": "bool"
          },
          {
            "name": "max_ts",
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "trigger_price",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "trigger_condition",
            "type": {
              "defined": {
                "name": "OrderTriggerCondition"
              }
            }
          },
          {
            "name": "oracle_price_offset",
            "type": {
              "option": "i32"
            }
          },
          {
            "name": "auction_duration",
            "type": {
              "option": "u8"
            }
          },
          {
            "name": "auction_start_price",
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "auction_end_price",
            "type": {
              "option": "i64"
            }
          }
        ]
      }
    },
    {
      "name": "OrderTriggerCondition",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Above"
          },
          {
            "name": "Below"
          },
          {
            "name": "TriggeredAbove"
          },
          {
            "name": "TriggeredBelow"
          }
        ]
      }
    },
    {
      "name": "OrderType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Market"
          },
          {
            "name": "Limit"
          },
          {
            "name": "TriggerMarket"
          },
          {
            "name": "TriggerLimit"
          },
          {
            "name": "Oracle"
          }
        ]
      }
    },
    {
      "name": "Permission",
      "docs": [
        "* Delegate ACL"
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "DriftInitialize"
          },
          {
            "name": "DriftUpdateUser"
          },
          {
            "name": "DriftDeleteUser"
          },
          {
            "name": "DriftDeposit"
          },
          {
            "name": "DriftWithdraw"
          },
          {
            "name": "DriftPlaceOrders"
          },
          {
            "name": "DriftCancelOrders"
          },
          {
            "name": "DriftPerpMarket"
          },
          {
            "name": "DriftSpotMarket"
          },
          {
            "name": "Stake"
          },
          {
            "name": "Unstake"
          },
          {
            "name": "LiquidUnstake"
          },
          {
            "name": "JupiterSwapAllowlisted"
          },
          {
            "name": "JupiterSwapAny"
          },
          {
            "name": "WSolWrap"
          },
          {
            "name": "WSolUnwrap"
          },
          {
            "name": "MintTokens"
          },
          {
            "name": "BurnTokens"
          },
          {
            "name": "ForceTransferTokens"
          },
          {
            "name": "SetTokenAccountState"
          },
          {
            "name": "StakeJup"
          },
          {
            "name": "VoteOnProposal"
          },
          {
            "name": "UnstakeJup"
          },
          {
            "name": "JupiterSwapLst"
          },
          {
            "name": "KaminoInit"
          },
          {
            "name": "KaminoDeposit"
          },
          {
            "name": "DriftModifyOrders"
          },
          {
            "name": "MeteoraDlmmInitPosition"
          },
          {
            "name": "MeteoraDlmmClosePosition"
          },
          {
            "name": "MeteoraDlmmLiquidity"
          },
          {
            "name": "MeteoraDlmmSwap"
          }
        ]
      }
    },
    {
      "name": "PolicyAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "locked_until_ts",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "PositionDirection",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Long"
          },
          {
            "name": "Short"
          }
        ]
      }
    },
    {
      "name": "PostOnlyParam",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "None"
          },
          {
            "name": "MustPostOnly"
          },
          {
            "name": "TryPostOnly"
          },
          {
            "name": "Slide"
          }
        ]
      }
    },
    {
      "name": "ShareClassField",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": {
              "defined": {
                "name": "ShareClassFieldName"
              }
            }
          },
          {
            "name": "value",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "ShareClassFieldName",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "ISIN"
          },
          {
            "name": "ShareClassCurrency"
          },
          {
            "name": "AppliedSubscriptionFeeInFavourOfDistributor"
          },
          {
            "name": "AppliedSubscriptionFeeInFavourOfDistributorReferenceDate"
          },
          {
            "name": "CurrencyOfMinimalSubscription"
          },
          {
            "name": "FullShareClassName"
          },
          {
            "name": "HasPerformanceFee"
          },
          {
            "name": "HasSubscriptionFeeInFavourOfDistributor"
          },
          {
            "name": "InvestmentStatus"
          },
          {
            "name": "ManagementFeeApplied"
          },
          {
            "name": "ManagementFeeAppliedReferenceDate"
          },
          {
            "name": "ManagementFeeMaximum"
          },
          {
            "name": "MaximumSubscriptionFeeInFavourOfDistributor"
          },
          {
            "name": "MinimalInitialSubscriptionCategory"
          },
          {
            "name": "MinimalInitialSubscriptionInAmount"
          },
          {
            "name": "MinimalInitialSubscriptionInShares"
          },
          {
            "name": "MinimalSubsequentSubscriptionCategory"
          },
          {
            "name": "MinimalSubsequentSubscriptionInAmount"
          },
          {
            "name": "MinimalSubsequentSubscriptionInShares"
          },
          {
            "name": "MinimumSubscriptionFeeInFavourOfDistributor"
          },
          {
            "name": "ShareClassDistributionPolicy"
          },
          {
            "name": "ShareClassExtension"
          },
          {
            "name": "ShareClassLaunchDate"
          },
          {
            "name": "ShareClassLifecycle"
          },
          {
            "name": "SRRI"
          },
          {
            "name": "LaunchPrice"
          },
          {
            "name": "LaunchPriceCurrency"
          },
          {
            "name": "LaunchPriceDate"
          },
          {
            "name": "HasAppliedSubscriptionFeeInFavourOfFund"
          },
          {
            "name": "AppliedSubscriptionFeeInFavourOfFund"
          },
          {
            "name": "AppliedSubscriptionFeeInFavourOfFundReferenceDate"
          },
          {
            "name": "MaximumSubscriptionFeeInFavourOfFund"
          },
          {
            "name": "HasAppliedRedemptionFeeInFavourOfFund"
          },
          {
            "name": "AppliedRedemptionFeeInFavourOfFund"
          },
          {
            "name": "AppliedRedemptionFeeInFavourOfFundReferenceDate"
          },
          {
            "name": "MaximumRedemptionFeeInFavourOfFund"
          },
          {
            "name": "AppliedRedemptionFeeInFavourOfDistributor"
          },
          {
            "name": "AppliedRedemptionFeeInFavourOfDistributorReferenceDate"
          },
          {
            "name": "CurrencyOfMinimalOrMaximumRedemption"
          },
          {
            "name": "CutOffDateOffsetForRedemption"
          },
          {
            "name": "CutOffDateOffsetForSubscription"
          },
          {
            "name": "CutOffTimeForRedemption"
          },
          {
            "name": "CutOffTimeForSubscription"
          },
          {
            "name": "HasLockUpForRedemption"
          },
          {
            "name": "HasRedemptionFeeInFavourOfDistributor"
          },
          {
            "name": "IsValidISIN"
          },
          {
            "name": "LockUpComment"
          },
          {
            "name": "LockUpPeriodInDays"
          },
          {
            "name": "ManagementFeeMinimum"
          },
          {
            "name": "MaximalNumberOfPossibleDecimalsAmount"
          },
          {
            "name": "MaximalNumberOfPossibleDecimalsNAV"
          },
          {
            "name": "MaximalNumberOfPossibleDecimalsShares"
          },
          {
            "name": "MaximumInitialRedemptionInAmount"
          },
          {
            "name": "MaximumInitialRedemptionInShares"
          },
          {
            "name": "MaximumRedemptionFeeInFavourOfDistributor"
          },
          {
            "name": "MaximumSubsequentRedemptionInAmount"
          },
          {
            "name": "MaximumSubsequentRedemptionInShares"
          },
          {
            "name": "MinimalInitialRedemptionInAmount"
          },
          {
            "name": "MinimalInitialRedemptionInShares"
          },
          {
            "name": "MinimalRedemptionCategory"
          },
          {
            "name": "MinimalSubsequentRedemptionInAmount"
          },
          {
            "name": "MinimalSubsequentRedemptionInShares"
          },
          {
            "name": "MinimumRedemptionFeeInFavourOfDistributor"
          },
          {
            "name": "MinimumRedemptionFeeInFavourOfFund"
          },
          {
            "name": "MinimumSubscriptionFeeInFavourOfFund"
          },
          {
            "name": "PerformanceFeeMinimum"
          },
          {
            "name": "RoundingMethodForPrices"
          },
          {
            "name": "RoundingMethodForRedemptionInAmount"
          },
          {
            "name": "RoundingMethodForRedemptionInShares"
          },
          {
            "name": "RoundingMethodForSubscriptionInAmount"
          },
          {
            "name": "RoundingMethodForSubscriptionInShares"
          },
          {
            "name": "ShareClassDividendType"
          },
          {
            "name": "CUSIP"
          },
          {
            "name": "Valor"
          },
          {
            "name": "FundId"
          },
          {
            "name": "ImageUri"
          }
        ]
      }
    },
    {
      "name": "StateAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "account_type",
            "type": {
              "defined": {
                "name": "AccountType"
              }
            }
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "vault",
            "type": "pubkey"
          },
          {
            "name": "enabled",
            "type": "bool"
          },
          {
            "name": "created",
            "type": {
              "defined": {
                "name": "CreatedModel"
              }
            }
          },
          {
            "name": "engine",
            "type": "pubkey"
          },
          {
            "name": "mints",
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "metadata",
            "type": {
              "option": {
                "defined": {
                  "name": "Metadata"
                }
              }
            }
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "uri",
            "type": "string"
          },
          {
            "name": "assets",
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "delegate_acls",
            "type": {
              "vec": {
                "defined": {
                  "name": "DelegateAcl"
                }
              }
            }
          },
          {
            "name": "integrations",
            "type": {
              "vec": {
                "defined": {
                  "name": "Integration"
                }
              }
            }
          },
          {
            "name": "params",
            "type": {
              "vec": {
                "vec": {
                  "defined": {
                    "name": "EngineField"
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "StateModel",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "id",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "account_type",
            "type": {
              "option": {
                "defined": {
                  "name": "AccountType"
                }
              }
            }
          },
          {
            "name": "name",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "uri",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "enabled",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "assets",
            "type": {
              "option": {
                "vec": "pubkey"
              }
            }
          },
          {
            "name": "external_vault_accounts",
            "type": {
              "option": {
                "vec": "pubkey"
              }
            }
          },
          {
            "name": "mints",
            "type": {
              "option": {
                "vec": {
                  "defined": {
                    "name": "MintModel"
                  }
                }
              }
            }
          },
          {
            "name": "company",
            "type": {
              "option": {
                "defined": {
                  "name": "CompanyModel"
                }
              }
            }
          },
          {
            "name": "owner",
            "type": {
              "option": {
                "defined": {
                  "name": "ManagerModel"
                }
              }
            }
          },
          {
            "name": "created",
            "type": {
              "option": {
                "defined": {
                  "name": "CreatedModel"
                }
              }
            }
          },
          {
            "name": "delegate_acls",
            "type": {
              "option": {
                "vec": {
                  "defined": {
                    "name": "DelegateAcl"
                  }
                }
              }
            }
          },
          {
            "name": "integrations",
            "type": {
              "option": {
                "vec": {
                  "defined": {
                    "name": "Integration"
                  }
                }
              }
            }
          },
          {
            "name": "drift_market_indexes_perp",
            "type": {
              "option": {
                "vec": "u32"
              }
            }
          },
          {
            "name": "drift_market_indexes_spot",
            "type": {
              "option": {
                "vec": "u32"
              }
            }
          },
          {
            "name": "drift_order_types",
            "type": {
              "option": {
                "vec": "u32"
              }
            }
          },
          {
            "name": "metadata",
            "type": {
              "option": {
                "defined": {
                  "name": "Metadata"
                }
              }
            }
          },
          {
            "name": "raw_openfunds",
            "type": {
              "option": {
                "defined": {
                  "name": "FundOpenfundsModel"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "StrategyParameters",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "min_bin_id",
            "type": "i32"
          },
          {
            "name": "max_bin_id",
            "type": "i32"
          },
          {
            "name": "strategy_type",
            "type": {
              "defined": {
                "name": "StrategyType"
              }
            }
          },
          {
            "name": "parameteres",
            "type": {
              "array": [
                "u8",
                64
              ]
            }
          }
        ]
      }
    },
    {
      "name": "StrategyType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "SpotOneSide"
          },
          {
            "name": "CurveOneSide"
          },
          {
            "name": "BidAskOneSide"
          },
          {
            "name": "SpotBalanced"
          },
          {
            "name": "CurveBalanced"
          },
          {
            "name": "BidAskBalanced"
          },
          {
            "name": "SpotImBalanced"
          },
          {
            "name": "CurveImBalanced"
          },
          {
            "name": "BidAskImBalanced"
          }
        ]
      }
    }
  ],
  "constants": [
    {
      "name": "SEED_METADATA",
      "type": "string",
      "value": "\"metadata\""
    },
    {
      "name": "SEED_MINT",
      "type": "string",
      "value": "\"mint\""
    },
    {
      "name": "SEED_STATE",
      "type": "string",
      "value": "\"state\""
    },
    {
      "name": "SEED_VAULT",
      "type": "string",
      "value": "\"vault\""
    }
  ]
}